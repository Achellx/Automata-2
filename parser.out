Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> expresion SUMA termino
Rule 2     expresion -> expresion RESTA termino
Rule 3     expresion -> termino
Rule 4     termino -> NUMERO

Terminals, with rules where they appear

NUMERO               : 4
RESTA                : 2
SUMA                 : 1
error                : 

Nonterminals, with rules where they appear

expresion            : 1 2 0
termino              : 1 2 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . expresion SUMA termino
    (2) expresion -> . expresion RESTA termino
    (3) expresion -> . termino
    (4) termino -> . NUMERO

    NUMERO          shift and go to state 3

    expresion                      shift and go to state 1
    termino                        shift and go to state 2

state 1

    (0) S' -> expresion .
    (1) expresion -> expresion . SUMA termino
    (2) expresion -> expresion . RESTA termino

    SUMA            shift and go to state 4
    RESTA           shift and go to state 5


state 2

    (3) expresion -> termino .

    SUMA            reduce using rule 3 (expresion -> termino .)
    RESTA           reduce using rule 3 (expresion -> termino .)
    $end            reduce using rule 3 (expresion -> termino .)


state 3

    (4) termino -> NUMERO .

    SUMA            reduce using rule 4 (termino -> NUMERO .)
    RESTA           reduce using rule 4 (termino -> NUMERO .)
    $end            reduce using rule 4 (termino -> NUMERO .)


state 4

    (1) expresion -> expresion SUMA . termino
    (4) termino -> . NUMERO

    NUMERO          shift and go to state 3

    termino                        shift and go to state 6

state 5

    (2) expresion -> expresion RESTA . termino
    (4) termino -> . NUMERO

    NUMERO          shift and go to state 3

    termino                        shift and go to state 7

state 6

    (1) expresion -> expresion SUMA termino .

    SUMA            reduce using rule 1 (expresion -> expresion SUMA termino .)
    RESTA           reduce using rule 1 (expresion -> expresion SUMA termino .)
    $end            reduce using rule 1 (expresion -> expresion SUMA termino .)


state 7

    (2) expresion -> expresion RESTA termino .

    SUMA            reduce using rule 2 (expresion -> expresion RESTA termino .)
    RESTA           reduce using rule 2 (expresion -> expresion RESTA termino .)
    $end            reduce using rule 2 (expresion -> expresion RESTA termino .)

